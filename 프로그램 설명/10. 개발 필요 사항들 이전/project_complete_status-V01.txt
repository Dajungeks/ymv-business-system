# YMV Business System - 완전한 프로젝트 상태 문서

## 📋 프로젝트 개요

**프로젝트명**: YMV 관리 프로그램  
**위치**: D:\ymv-business-system  
**개발 언어**: Python + Streamlit  
**데이터베이스**: 현재 로컬 JSON 파일 (향후 Supabase PostgreSQL 연결 예정)  
**GitHub**: https://github.com/dajungeks/ymv-business-system.git  

## 🎯 개발 목표

베트남 소재 한국 기업을 위한 통합 비즈니스 관리 시스템

### 1단계 개발 범위 (현재 완료)
- ✅ 엑셀 대용 데이터 관리
- ✅ 로컬 JSON 데이터베이스 연동
- ✅ 인쇄 기능 시뮬레이션
- ✅ 수정/삭제 기능 완전 구현

### 부서별 기능 요구사항 (현재 완료)
**총무 기능**
- ✅ 구매품 관리 (사무용품, 판매제품, 핫런너) + 수정/삭제
- ✅ 지출 요청서 작성/수정/삭제 + 프린터 출력 시뮬레이션

**영업 기능**
- ✅ 견적서 작성/수정/삭제/관리
- ✅ 견적서 프린트 출력 시뮬레이션
- ✅ PDF 생성 기능 준비

**제품 관리**
- ✅ 제품 코드 관리 + 수정/삭제
- ✅ CSV 파일 업로드 기능 (일괄 등록)
- ✅ 제품 정보 상세보기

## 🗂️ 현재 프로젝트 구조

```
D:\ymv-business-system/
├── .env                                    # 환경 변수 (Supabase 연결 정보)
├── requirements.txt                        # Python 의존성
├── database/
│   └── init_db.sql                        # DB 스키마 (준비됨)
├── README.md                              # 프로젝트 문서
├── .gitignore                             # Git 제외 파일
├── app/
│   ├── main.py                            # ⭐ 메인 애플리케이션 (완전 구현)
│   ├── __init__.py                        # 초기화 파일
│   └── (기타 구조는 향후 확장 예정)
├── data/                                  # 🗃️ JSON 데이터 저장소
│   ├── purchases.json                     # 구매품 데이터
│   ├── expenses.json                      # 지출 요청서 데이터
│   ├── quotations.json                    # 견적서 데이터
│   ├── customers.json                     # 고객 데이터
│   └── products.json                      # 제품 데이터
├── uploads/                               # 업로드 파일
├── exports/                               # 내보내기 파일
├── logs/                                  # 로그 파일
└── fonts/                                 # 폰트 파일
```

## 💻 현재 완성된 기능들

### 🔐 인증 시스템
- **로그인**: Master / 1023
- **세션 관리**: 로그인 상태 유지
- **로그아웃**: 안전한 세션 종료

### 📊 대시보드
- **통계 카드**: 각 항목별 개수 표시
- **최근 활동**: 구매품 목록, 견적서 미리보기
- **실시간 업데이트**: 데이터 변경 시 즉시 반영

### 📦 구매품 관리 (완전 구현)
**등록 기능**
- 카테고리: 사무용품, 판매제품, 핫런너, 기타
- 상세 정보: 품목명, 수량, 단위, 단가, 공급업체
- 상태 관리: 대기중, 승인됨, 주문완료, 취소됨
- 긴급도: 보통, 긴급, 매우긴급

**관리 기능**
- ✅ **수정**: 모든 필드 수정 가능
- ✅ **삭제**: 즉시 삭제 가능
- ✅ **상세보기**: 전체 정보 확인
- ✅ **필터링**: 카테고리별, 상태별 필터
- ✅ **출력**: 출력 버튼 (시뮬레이션)

### 💰 지출 요청서 (완전 구현)
**작성 기능**
- 지출 유형: 출장비, 사무용품, 접대비, 교육비, 교통비, 식비, 통신비, 장비구입, 유지보수, 마케팅, 기타
- 결제 방법: 현금, 법인카드, 계좌이체, 수표
- 통화: USD, VND, KRW
- 상세 정보: 지출 내역, 사업 목적

**관리 기능**
- ✅ **수정**: 모든 필드 수정 가능
- ✅ **삭제**: 즉시 삭제 가능
- ✅ **상세보기**: 전체 정보 확인
- ✅ **상태 관리**: 대기중, 승인됨, 지급완료, 반려됨
- ✅ **출력**: 출력 버튼 (시뮬레이션)

### 📋 견적서 관리 (완전 구현)
**작성 기능**
- 고객 정보: 고객명, 회사명, 담당자, 연락처
- 견적 정보: 견적일, 유효기간, 통화
- 견적 항목: 항목명, 수량, 단가 (현재 단일 항목)
- 총액 자동 계산

**관리 기능**
- ✅ **수정**: 모든 필드 수정 가능
- ✅ **삭제**: 즉시 삭제 가능
- ✅ **상세보기**: 전체 정보 확인
- ✅ **상태 관리**: 작성중, 발송됨, 승인됨, 거절됨, 만료됨
- ✅ **출력**: 견적서 출력, PDF 생성 버튼 (시뮬레이션)

### 👥 고객 관리 (완전 구현)
**등록 기능**
- 기본 정보: 회사명, 담당자명, 직책, 연락처
- 상세 정보: 이메일, 주소, 업종, 비고

**관리 기능**
- ✅ **수정**: 모든 필드 수정 가능
- ✅ **삭제**: 즉시 삭제 가능
- ✅ **상세보기**: 전체 정보 확인
- ✅ **검색**: 회사명, 담당자명, 업종으로 검색
- ✅ **Excel 다운로드**: 다운로드 버튼 (시뮬레이션)

### 📦 제품 관리 (완전 구현)
**등록 기능**
- 기본 정보: 제품 코드, 제품명, 카테고리, 단위
- 가격 정보: 단가, 통화, 공급업체
- 재고 관리: 재고수량
- 상세 정보: 제품 설명

**관리 기능**
- ✅ **수정**: 모든 필드 수정 가능
- ✅ **삭제**: 즉시 삭제 가능
- ✅ **상세보기**: 전체 정보 확인
- ✅ **필터링**: 카테고리별 필터
- ✅ **검색**: 제품명, 제품 코드로 검색
- ✅ **CSV 업로드**: 일괄 등록 기능
- ✅ **CSV 템플릿**: 템플릿 다운로드 기능

## 📄 주요 파일 내용

### requirements.txt
```
streamlit==1.28.1
pandas==2.0.3
python-dateutil==2.8.2
openpyxl==3.1.2
plotly==5.17.0
altair==5.1.2
```

### .env (환경 변수 예시)
```env
# Supabase 연결 정보 (향후 사용)
SUPABASE_URL=https://your-project-ref.supabase.co
SUPABASE_KEY=your-anon-key
DB_HOST=db.your-project-ref.supabase.co
DB_PORT=5432
DB_NAME=postgres
DB_USER=postgres
DB_PASSWORD=your-database-password

# 애플리케이션 설정
APP_NAME=YMV Business Management System
DEBUG=False
MAX_FILE_SIZE=10485760
```

## 🚀 실행 방법

### 현재 실행 (로컬 JSON 기반)
```bash
cd D:\ymv-business-system
streamlit run app\main.py
```

### 로그인 정보
- **사용자명**: Master
- **비밀번호**: 1023

## 🔧 기술적 특징

### 데이터 저장 방식
- **현재**: JSON 파일 기반 (data/ 폴더)
- **장점**: 별도 DB 서버 불필요, 빠른 개발
- **향후**: Supabase PostgreSQL 연결 예정

### 수정/삭제 기능
- **인라인 편집**: 각 항목 바로 아래에서 수정
- **실시간 저장**: 수정 즉시 JSON 파일에 저장
- **상세보기**: 확장 가능한 상세 정보 패널
- **삭제 확인**: 삭제 후 성공 메시지 표시

### UI/UX 특징
- **반응형 디자인**: 다양한 화면 크기 지원
- **직관적 아이콘**: 📝 (수정), 👁️ (상세보기), ❌ (삭제)
- **색상 코딩**: 상태별 다른 색상 배지
- **탭 구성**: 등록/목록/업로드 탭으로 구분

## 📈 다음 단계 개발 계획

### 2단계: 데이터베이스 연결
- [ ] Supabase PostgreSQL 연결
- [ ] JSON → DB 마이그레이션
- [ ] 실시간 데이터 동기화

### 3단계: 고급 기능
- [ ] PDF 생성 기능 (ReportLab)
- [ ] Excel 실제 다운로드 기능
- [ ] 실제 인쇄 기능 연동
- [ ] 이메일 발송 기능

### 4단계: 사용자 관리
- [ ] 다중 사용자 지원
- [ ] 부서별 권한 관리
- [ ] 승인 워크플로우

### 5단계: 고도화
- [ ] 통계 대시보드 개선
- [ ] 다국어 지원 (한국어/영어/베트남어)
- [ ] 모바일 최적화

## 🗃️ 데이터 구조

### 구매품 (purchases.json)
```json
{
  "id": 1,
  "category": "사무용품",
  "item_name": "프린터 토너",
  "quantity": 5,
  "unit": "개",
  "unit_price": 45.00,
  "total_price": 225.00,
  "supplier": "사무용품점",
  "request_date": "2024-12-21",
  "urgency": "보통",
  "status": "대기중",
  "notes": "흑백 전용",
  "created_at": "2024-12-21 15:30:00",
  "updated_at": "2024-12-21 16:00:00"
}
```

### 지출 요청서 (expenses.json)
```json
{
  "id": 1,
  "expense_type": "출장비",
  "amount": 500.00,
  "currency": "USD",
  "payment_method": "법인카드",
  "expense_date": "2024-12-21",
  "department": "영업",
  "requester": "System Administrator",
  "urgency": "보통",
  "description": "고객사 방문",
  "business_purpose": "신규 계약 협상",
  "status": "대기중",
  "created_at": "2024-12-21 15:30:00"
}
```

### 견적서 (quotations.json)
```json
{
  "id": 1,
  "customer_name": "김철수",
  "company": "ABC 제조업체",
  "contact_person": "김철수",
  "email": "kim@abc.com",
  "phone": "010-1234-5678",
  "quote_date": "2024-12-21",
  "valid_until": "2024-12-31",
  "currency": "USD",
  "item_name": "핫런너 시스템 A형",
  "quantity": 2,
  "unit_price": 1500.00,
  "total_amount": 3000.00,
  "notes": "설치 서비스 포함",
  "status": "작성중",
  "created_at": "2024-12-21 15:30:00"
}
```

### 고객 (customers.json)
```json
{
  "id": 1,
  "company_name": "ABC 제조업체",
  "contact_person": "김철수",
  "position": "구매팀장",
  "phone": "010-1234-5678",
  "email": "kim@abc.com",
  "address": "서울시 강남구 테헤란로 123",
  "industry": "제조업",
  "notes": "주요 고객",
  "created_at": "2024-12-21 15:30:00"
}
```

### 제품 (products.json)
```json
{
  "id": 1,
  "product_code": "HR001",
  "product_name": "핫런너 시스템 A형",
  "category": "핫런너",
  "unit": "세트",
  "unit_price": 1500.00,
  "currency": "USD",
  "supplier": "핫런너코리아",
  "stock_quantity": 10,
  "description": "고성능 핫런너 시스템",
  "created_at": "2024-12-21 15:30:00"
}
```

## 🔗 GitHub 연결 상태

**Repository**: https://github.com/dajungeks/ymv-business-system.git  
**브랜치**: main  
**상태**: 연결됨  

### Git 명령어
```bash
# 변경사항 커밋
git add .
git commit -m "feature: 수정/삭제 기능 완전 구현"
git push origin main

# 새로운 기능 브랜치 생성 (향후)
git checkout -b feature/supabase-integration
```

## 🗄️ Supabase 연결 준비 상태

### 데이터베이스 스키마 (database/init_db.sql)
- ✅ 테이블 구조 설계 완료
- ✅ 관계 설정 완료
- ✅ 인덱스 최적화 완료
- ✅ 기본 데이터 준비 완료

### 연결 대기 상태
현재 로컬 JSON으로 완전 동작하며, Supabase 연결 시 데이터 마이그레이션 준비됨

## 📝 개발 과정 요약

### 1차: 기본 시스템 구축
- ✅ 프로젝트 구조 설계
- ✅ Streamlit 기반 UI 구현
- ✅ JSON 파일 기반 데이터 저장
- ✅ 기본 CRUD 기능 구현

### 2차: 수정/삭제 기능 완전 구현 (현재 완료)
- ✅ 각 페이지별 수정/삭제 버튼 추가
- ✅ 인라인 편집 폼 구현
- ✅ 상세보기 패널 구현
- ✅ 실시간 데이터 업데이트
- ✅ 사용자 경험 개선

### 다음 채팅방에서 계속할 작업들
1. **PDF 생성 기능**: ReportLab을 사용한 견적서 PDF 생성
2. **Excel 다운로드**: 실제 Excel 파일 다운로드 기능
3. **Supabase 연결**: 로컬 JSON → PostgreSQL 마이그레이션
4. **승인 워크플로우**: 지출요청서 승인 프로세스
5. **이메일 기능**: 견적서 이메일 발송
6. **사용자 권한**: 부서별 접근 제어
7. **통계 대시보드**: 고급 차트 및 분석 기능

## 🎯 현재 상태 요약

- **개발 진행도**: 1단계 100% 완료
- **핵심 기능**: 모든 CRUD 기능 완전 구현
- **사용 가능 상태**: 즉시 실무 사용 가능
- **안정성**: 로컬 JSON 기반으로 안정적 동작
- **확장성**: Supabase 연결 준비 완료

---

**🚀 다음 채팅방에서 이 문서를 참조하여 지속적인 개발이 가능합니다!**